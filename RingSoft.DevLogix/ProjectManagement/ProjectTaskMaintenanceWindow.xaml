<ac:DbMaintenanceWindow x:Class="RingSoft.DevLogix.ProjectManagement.ProjectTaskMaintenanceWindow"
                            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                            xmlns:dec="clr-namespace:RingSoft.DataEntryControls.WPF;assembly=RingSoft.DataEntryControls.WPF"
                            xmlns:deg="clr-namespace:RingSoft.DataEntryControls.WPF.DataEntryGrid;assembly=RingSoft.DataEntryControls.WPF"
                            xmlns:lc="clr-namespace:RingSoft.DbLookup.Controls.WPF;assembly=RingSoft.DbLookup.Controls.WPF"
                            xmlns:ac="clr-namespace:RingSoft.App.Controls;assembly=RingSoft.App.Controls"
                            xmlns:dl="clr-namespace:RingSoft.DevLogix"
                            xmlns:vm="clr-namespace:RingSoft.DevLogix.Library.ViewModels.ProjectManagement;assembly=RingSoft.DevLogix.Library"
                            xmlns:projectManagement="clr-namespace:RingSoft.DevLogix.DataAccess.LookupModel.ProjectManagement;assembly=RingSoft.DevLogix.DataAccess"
                            xmlns:local="clr-namespace:RingSoft.DevLogix.ProjectManagement"
                            xmlns:lm="clr-namespace:RingSoft.DevLogix.DataAccess.LookupModel;assembly=RingSoft.DevLogix.DataAccess"
                            mc:Ignorable="d"
                            Style="{StaticResource BaseWindowStyle}"
                            Title="Project Task Maintenance Window" Height="550" Width="850">

    <Window.Resources>

        <deg:DataEntryGridDisplayStyle x:Key="CommentCellStyle" DisplayId="{x:Static vm:ProjectTaskLaborPartsManager.CommentRowDisplayStyleId}" 
                                       ForegroundBrush="White"
                                       SelectionBrush="White">
            <deg:DataEntryGridDisplayStyle.BackgroundBrush>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#FF0EB20E" Offset="0"/>
                    <GradientStop Color="Green" Offset="1"/>
                </LinearGradientBrush>
            </deg:DataEntryGridDisplayStyle.BackgroundBrush>
        </deg:DataEntryGridDisplayStyle>

        <deg:DataEntryGridDisplayStyle x:Key="MiscCellStyle" DisplayId="{x:Static vm:ProjectTaskLaborPartsManager.MiscRowDisplayStyleId}" ForegroundBrush="White" SelectionBrush="White">
            <deg:DataEntryGridDisplayStyle.BackgroundBrush>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#FF6D6DFD" Offset="0"/>
                    <GradientStop Color="Blue" Offset="1"/>
                </LinearGradientBrush>
            </deg:DataEntryGridDisplayStyle.BackgroundBrush>
        </deg:DataEntryGridDisplayStyle>

        <Style TargetType="{x:Type local:ProjectTaskHeaderControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:ProjectTaskHeaderControl}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">

                            <Grid VerticalAlignment="Stretch">

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <ac:DbMaintenanceButton Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" x:Name="PunchInButton" Content="P_unch In" ImageSource="{StaticResource AfUpImage}" Style="{StaticResource SubButton}" HorizontalContentAlignment="Left"/>

                                <ac:DbMaintenanceButton Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" x:Name="RecalcButton" Content="_Recalculate" ImageSource="{StaticResource AfUpImage}" Style="{StaticResource SubButton}" HorizontalContentAlignment="Left"/>

                            </Grid>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ac:DbMaintenanceTopHeaderControl}" BasedOn="{StaticResource {x:Type ac:DbMaintenanceTopHeaderControl}}">

            <Setter Property="CustomPanel">
                <Setter.Value>
                    <local:ProjectTaskHeaderControl/>
                </Setter.Value>
            </Setter>

        </Style>

    </Window.Resources>
    <Window.DataContext>
        <vm:ProjectTaskViewModel x:Name="LocalViewModel"/>
    </Window.DataContext>

    <DockPanel>

        <ac:DbMaintenanceTopHeaderControl x:Name="TopHeaderControl" DockPanel.Dock="Top"/>

        <Grid Margin="5">
            
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Label Grid.Row="0" Grid.Column="0" Content="Task ID"/>

            <dec:StringReadOnlyBox Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" Width="50" Text="{Binding Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            <Label Grid.Row="0" Grid.Column="2" Content="Name"/>

            <lc:AutoFillControl Grid.Row="0" Grid.Column="3" x:Name="KeyControl" Width="200" HorizontalAlignment="Left"/>


            <TabControl Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5" x:Name="TabControl">

                <TabItem Header="Details" x:Name="DetailsTabItem">

                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="Project"/>

                        <lc:AutoFillControl Grid.Row="0" Grid.Column="1" x:Name="ProjectControl" Width="200" HorizontalAlignment="Left" Setup="{Binding ProjectAutoFillSetup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="{Binding ProjectAutoFillValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Row="0" Grid.Column="2" Content="Assigned To"/>

                        <lc:AutoFillControl Grid.Row="0" Grid.Column="3" x:Name="UserControl" Width="200" HorizontalAlignment="Left" Setup="{Binding UserAutoFillSetup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="{Binding UserAutoFillValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="Time Cost"/>

                        <dl:TimeControl Grid.Row="1" Grid.Column="1" x:Name="TimeControl" Width="150" Minutes="{Binding MinutesCost, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left"/>

                        <CheckBox Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" Content="Time Cost Edited" IsEnabled="False" VerticalAlignment="Center" IsChecked="{Binding TimeEdited, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Row="2" Grid.Column="0" Content="Percent Complete"/>

                        <dec:DecimalEditControl Grid.Row="2" Grid.Column="1" x:Name="PercentCompleteControl" Width="75" FormatType="Percent" Value="{Binding PercentComplete, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" TextAlignment="Left"/>

                        <Label Grid.Row="2" Grid.Column="2" Content="Hourly Rate"/>

                        <dec:DecimalEditControl Grid.Row="2" Grid.Column="3" x:Name="HourlyRateControl" Width="150" HorizontalAlignment="Left" Value="{Binding HourlyRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FormatType="Currency" TextAlignment="Left"/>

                        <deg:DataEntryGrid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="4" Manager="{Binding ProjectTotalsManager}" DataEntryCanUserAddRows="False" HorizontalAlignment="Left" Margin="5">

                            <deg:DataEntryGrid.Columns>

                                <deg:DataEntryGridTextColumn Header="Item Type" ColumnId="{x:Static vm:ProjectTotalsManager.TypeColumnId}" Width="100"/>

                                <deg:DataEntryGridTextColumn Header="Time" ColumnId="{x:Static vm:ProjectTotalsManager.TotalTimeColumnId}" Width="125"/>

                                <deg:DataEntryGridTextColumn Header="Cost" ColumnId="{x:Static vm:ProjectTotalsManager.TotalCostColumnId}" Width="150" Alignment="Right"/>

                            </deg:DataEntryGrid.Columns>
                            <deg:DataEntryGrid.DisplayStyles>

                                <deg:DataEntryGridDisplayStyle DisplayId="{x:Static vm:ProjectTotalsManager.NegativeDisplayStyleId}" ForegroundBrush="Red"/>

                                <deg:DataEntryGridDisplayStyle DisplayId="{x:Static vm:ProjectTotalsManager.PositiveDisplayStyleId}" ForegroundBrush="Green"/>

                            </deg:DataEntryGrid.DisplayStyles>

                        </deg:DataEntryGrid>

                    </Grid>

                </TabItem>

                <TabItem Header="Labor Parts" x:Name="LaborPartsTabItem">

                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="Calculated Time Cost"/>

                        <dec:StringReadOnlyBox Grid.Row="0" Grid.Column="1" Width="150" HorizontalAlignment="Left" Text="{Binding TotalMinutesCostText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <deg:DataEntryGrid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" x:Name="LaborPartsGrid" Manager="{Binding LaborPartsManager}">

                            <deg:DataEntryGrid.Columns>

                                <deg:DataEntryGridTextColumn ColumnId="{x:Static vm:ProjectTaskLaborPartsManager.LineTypeColumnId}" Width="100" Header="Line Type"/>

                                <deg:DataEntryGridTextColumn ColumnId="{x:Static vm:ProjectTaskLaborPartsManager.LaborPartColumnId}" Width="225" Header="Labor Part"/>

                                <deg:DataEntryGridTextColumn ColumnId="{x:Static vm:ProjectTaskLaborPartsManager.MinutesCostColumnId}" Width="100" Header="Time Cost"/>

                                <deg:DataEntryGridTextColumn ColumnId="{x:Static vm:ProjectTaskLaborPartsManager.QuantityColumnId}" Width="100" Header="Quantity"/>

                                <deg:DataEntryGridTextColumn ColumnId="{x:Static vm:ProjectTaskLaborPartsManager.ExtendedMinutesColumnId}" Width="100" Header="Extended&#10;Time Cost"/>

                                <deg:DataEntryGridCheckBoxColumn ColumnId="{x:Static vm:ProjectTaskLaborPartsManager.CompleteColumnId}" Width="75" Header="Complete"/>

                                <deg:DataEntryGridTextColumn ColumnId="{x:Static vm:ProjectTaskLaborPartsManager.PercentCompleteColumnId}" Width="75" Header="Percent&#10;Complete"/>

                            </deg:DataEntryGrid.Columns>

                            <deg:DataEntryGrid.DisplayStyles>
                                <StaticResource ResourceKey="CommentCellStyle"/>
                                <StaticResource ResourceKey="MiscCellStyle"/>
                            </deg:DataEntryGrid.DisplayStyles>

                        </deg:DataEntryGrid>
                    </Grid>

                </TabItem>

                <TabItem x:Name="DependenciesTab" Header="Dependencies" VerticalAlignment="Stretch">
                    <DockPanel>

                        <deg:DataEntryGrid x:Name="DependenciesGrid" Manager="{Binding ProjectTaskDependencyManager}">

                            <deg:DataEntryGrid.Columns>

                                <deg:DataEntryGridTextColumn ColumnId="1" Header="Depends On Task" Width="200"/>

                            </deg:DataEntryGrid.Columns>
                        </deg:DataEntryGrid>
                    </DockPanel>
                </TabItem>

                <TabItem Header="Time Clocks" x:Name="TimeClockTab" VerticalAlignment="Stretch">

                    <DockPanel>

                        <lc:LookupControl LookupDefinition="{Binding TimeClockLookup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding TimeClockLookupCommand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                            <lc:LookupControl.LookupColumns>

                                <lc:LookupColumn PropertyName="{lc:NameOf PunchInDate, Type={x:Type lm:TimeClockLookup}}" Header="Punch In Date" Width="200"/>

                                <lc:LookupColumn PropertyName="{lc:NameOf UserName, Type={x:Type lm:TimeClockLookup}}" Header="User" Width="350"/>

                                <lc:LookupColumn PropertyName="{lc:NameOf MinutesSpent, Type={x:Type lm:TimeClockLookup}}" Header="Time Spent" TextAlignment="Right" Width="150"/>

                            </lc:LookupControl.LookupColumns>

                        </lc:LookupControl>

                    </DockPanel>

                </TabItem>



                <dec:DataEntryMemoTabItem Header="Notes" VerticalAlignment="Stretch">
                    <DockPanel>

                        <dec:DataEntryMemoEditor x:Name="NotesControl" Text="{Binding Path=Notes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                    </DockPanel>
                </dec:DataEntryMemoTabItem>

            </TabControl>

        </Grid>

    </DockPanel>
</ac:DbMaintenanceWindow>
