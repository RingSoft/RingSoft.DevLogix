<ac:DbMaintenanceWindow x:Class="RingSoft.DevLogix.QualityAssurance.TestingOutlineMaintenanceWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dec="clr-namespace:RingSoft.DataEntryControls.WPF;assembly=RingSoft.DataEntryControls.WPF"
        xmlns:deg="clr-namespace:RingSoft.DataEntryControls.WPF.DataEntryGrid;assembly=RingSoft.DataEntryControls.WPF"
        xmlns:lc="clr-namespace:RingSoft.DbLookup.Controls.WPF;assembly=RingSoft.DbLookup.Controls.WPF"
        xmlns:ac="clr-namespace:RingSoft.App.Controls;assembly=RingSoft.App.Controls"
        xmlns:vm="clr-namespace:RingSoft.DevLogix.Library.ViewModels.QualityAssurance.Testing;assembly=RingSoft.DevLogix.Library"
        xmlns:lm="clr-namespace:RingSoft.DevLogix.DataAccess.LookupModel;assembly=RingSoft.DevLogix.DataAccess"
        xmlns:local="clr-namespace:RingSoft.DevLogix.QualityAssurance"
        mc:Ignorable="d"
        Style="{StaticResource BaseWindowStyle}"
        Title="Testing Outline Maintenance Window" Height="450" Width="800">

    <Window.Resources>

        <Style TargetType="{x:Type local:TestingOutlineHeaderControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:TestingOutlineHeaderControl}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">

                            <Grid VerticalAlignment="Stretch">

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <ac:DbMaintenanceButton Grid.Row="0" Grid.Column="0" x:Name="GenerateDetailsButton" Content="_Generate Details" ImageSource="{StaticResource AfUpImage}" Style="{StaticResource SubButton}" HorizontalContentAlignment="Left"/>

                                <ac:DbMaintenanceButton Grid.Row="0" Grid.Column="1" x:Name="PunchInButton" Content="P_unch In" ImageSource="{StaticResource AfUpImage}" Style="{StaticResource SubButton}" HorizontalContentAlignment="Left"/>

                                <ac:DbMaintenanceButton Grid.Row="1" Grid.Column="0" x:Name="RetestButton" Content="_Retest" ImageSource="{StaticResource AfUpImage}" Style="{StaticResource SubButton}" HorizontalContentAlignment="Left"/>

                                <ac:DbMaintenanceButton Grid.Row="1" Grid.Column="1" x:Name="RecalcButton" Content="R_ecalculate" ImageSource="{StaticResource AfUpImage}" Style="{StaticResource SubButton}" HorizontalContentAlignment="Left"/>

                            </Grid>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ac:DbMaintenanceTopHeaderControl}" BasedOn="{StaticResource {x:Type ac:DbMaintenanceTopHeaderControl}}">

            <Setter Property="CustomPanel">
                <Setter.Value>
                    <local:TestingOutlineHeaderControl/>
                </Setter.Value>
            </Setter>

        </Style>
    </Window.Resources>

    <Window.DataContext>
        <vm:TestingOutlineViewModel x:Name="LocalViewModel"/>
    </Window.DataContext>

    <DockPanel>
        <ac:DbMaintenanceTopHeaderControl x:Name="TopHeaderControl" DockPanel.Dock="Top"/>
        <lc:DbMaintenanceStatusBar x:Name="StatusBar" DockPanel.Dock="Bottom"/>

        <Grid Margin="5">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Label Grid.Row="0" Grid.Column="0" Content="Testing Outline ID"/>

            <dec:StringReadOnlyBox Grid.Row="0" Grid.Column="1" Width="75" Text="{Binding Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            <Label Grid.Row="0" Grid.Column="2" Content="Name"/>

            <lc:AutoFillControl Grid.Row="0" Grid.Column="3" x:Name="NameControl" Width="200"/>

            <TabControl Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5">

                <TabItem Header="Details">

                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="Product"/>

                        <lc:AutoFillControl Grid.Row="0" Grid.Column="1" x:Name="ProductControl" Width="200" HorizontalAlignment="Left" Setup="{Binding ProductSetup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="{Binding ProductValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Row="0" Grid.Column="2" Content="Created By"/>

                        <lc:AutoFillControl Grid.Row="0" Grid.Column="3" x:Name="CreatedByControl" Width="200" HorizontalAlignment="Left" Setup="{Binding CreatedByAutoFillSetup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="{Binding CreatedByAutoFillValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="Assigned To"/>

                        <lc:AutoFillControl Grid.Row="1" Grid.Column="1" x:Name="AssignedToControl" Width="200" HorizontalAlignment="Left" Setup="{Binding AssignedToAutoFillSetup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="{Binding AssignedToAutoFillValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Row="1" Grid.Column="2" Content="Due Date"/>

                        <dec:DateEditControl Grid.Row="1" Grid.Column="3" Width="200" HorizontalAlignment="Left" DateFormatType="DateTime" AllowNullValue="True" Value="{Binding DueDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Row="2" Grid.Column="0" Content="% Complete"/>

                        <dec:DecimalReadOnlyBox Grid.Row="2" Grid.Column="1" FormatType="Percent" HorizontalAlignment="Left" Value="{Binding PercentComplete, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                    </Grid>
                </TabItem>
                <TabItem Header="Steps">

                    <DockPanel>
                        <deg:DataEntryGrid x:Name="DetailsGrid" Manager="{Binding DetailsGridManager}">
                            <deg:DataEntryGrid.Columns>

                                <deg:DataEntryGridTextColumn ColumnId="{x:Static vm:TestingOutlineDetailsGridManager.StepColumnId}" Header="Step" Width="200"/>

                                <deg:DataEntryGridCheckBoxColumn ColumnId="{x:Static vm:TestingOutlineDetailsGridManager.CompleteColumnId}" Header="Complete?" Width="100"/>

                                <deg:DataEntryGridTextColumn ColumnId="{x:Static vm:TestingOutlineDetailsGridManager.CompleteVersionColumnId}" Header="Completed Version" Width="200"/>

                                <deg:DataEntryGridTextColumn ColumnId="{x:Static vm:TestingOutlineDetailsGridManager.TemplateColumnId}" Header="Template" Width="200"/>

                            </deg:DataEntryGrid.Columns>
                        </deg:DataEntryGrid>
                    </DockPanel>
                </TabItem>
                <TabItem Header="Templates">
                    <DockPanel>
                        <deg:DataEntryGrid Manager="{Binding TemplatesGridManager}">
                            <deg:DataEntryGrid.Columns>

                                <deg:DataEntryGridTextColumn ColumnId="1" Header="Testing Template" Width="200"/>

                            </deg:DataEntryGrid.Columns>
                        </deg:DataEntryGrid>
                    </DockPanel>
                </TabItem>
                <TabItem Header="Cost">
                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="Total Time Spent"/>

                        <dec:StringReadOnlyBox Grid.Row="0" Grid.Column="1" Width="100" Text="{Binding TotalTimeSpent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Row="0" Grid.Column="2" Content="Total Cost"/>

                        <dec:DecimalReadOnlyBox Grid.Row="0" Grid.Column="3" Width="100" Value="{Binding TotalCost, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FormatType="Currency"/>

                        <deg:DataEntryGrid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5" DataEntryCanUserAddRows="False" CanUserDeleteRows="False" Manager="{Binding TestingOutlineCostManager}">

                            <deg:DataEntryGrid.Columns>

                                <deg:DataEntryGridTextColumn Header="User" Width="200" ColumnId="{x:Static vm:TestingOutlineCostManager.UserColumnId}"/>

                                <deg:DataEntryGridTextColumn Header="Time Spent" Width="100" ColumnId="{x:Static vm:TestingOutlineCostManager.TimeSpentColumnId}"/>

                                <deg:DataEntryGridTextColumn Header="Cost" Width="100" Alignment="Right" ColumnId="{x:Static vm:TestingOutlineCostManager.CostColumnId}"/>

                            </deg:DataEntryGrid.Columns>

                        </deg:DataEntryGrid>
                    </Grid>

                </TabItem>
                <TabItem x:Name="ErrorsTabItem" Header="Errors">

                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Button Grid.Row="0" Grid.Column="0" x:Name="ErrorsAddModifyButton" Content="Add/Modify" Command="{Binding ErrorAddModifyCommand}"/>

                        <lc:LookupControl Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" x:Name="ErrorsLookupControl" LookupDefinition="{Binding ErrorLookup}" Command="{Binding ErrorLookupCommand}">

                            <lc:LookupControl.LookupColumns>

                                <lc:LookupColumn PropertyName="{lc:NameOf ErrorId, Type={x:Type lm:ErrorLookup}}" Header="Error Id" Width="100"/>

                                <lc:LookupColumn PropertyName="{lc:NameOf User, Type={x:Type lm:ErrorLookup}}" Header="Found By" Width="200"/>

                            </lc:LookupControl.LookupColumns>

                        </lc:LookupControl>
                    </Grid>

                </TabItem>

                <TabItem Header="Time Clocks" x:Name="TimeClockTab" VerticalAlignment="Stretch">

                    <DockPanel>

                        <lc:LookupControl LookupDefinition="{Binding TimeClockLookup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding TimeClockLookupCommand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                            <lc:LookupControl.LookupColumns>

                                <lc:LookupColumn PropertyName="{lc:NameOf PunchInDate, Type={x:Type lm:TimeClockLookup}}" Header="Punch In Date" Width="200"/>

                                <lc:LookupColumn PropertyName="{lc:NameOf UserName, Type={x:Type lm:TimeClockLookup}}" Header="User" Width="200"/>

                                <lc:LookupColumn PropertyName="{lc:NameOf MinutesSpent, Type={x:Type lm:TimeClockLookup}}" Header="Time Spent" Width="100"/>

                            </lc:LookupControl.LookupColumns>

                        </lc:LookupControl>

                    </DockPanel>

                </TabItem>


                <dec:DataEntryMemoTabItem Header="Notes" VerticalAlignment="Stretch">
                    <DockPanel>

                        <dec:DataEntryMemoEditor Text="{Binding Path=Notes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                    </DockPanel>
                </dec:DataEntryMemoTabItem>

            </TabControl>
        </Grid>
    </DockPanel>
</ac:DbMaintenanceWindow>
